<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <!-- PERSISTENCE CONFIGURATION -->
    <!-- Spring DATA -->
    <jpa:repositories base-package="com.nuevebit.miroculus.mrna" />

    <!-- Spring ORM -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.nuevebit.miroculus.mrna" />
        <property name="jpaVendorAdapter">
            <!--
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
            </bean>
            -->
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter" >
                <property name="databasePlatform" value="${eclipselink.databasePlatform}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="eclipselink.logging.level">off</prop>
                <prop key="eclipselink.weaving">false</prop>

                <!--
                Es necesario utilizar otro data source para el generador de
                ids, de lo contrario, si se encuentra muy cargado el sistema,
                pueden ocasionarse deadlocks en la base de datos.
                -->
                <!--  Optimization #9 - statement caching -->
                <!--  Optimization #10 - batch writing -->
                <!--
                <prop key="eclipselink.persistence-context.flush-mode">commit</prop>
                <prop key="eclipselink.jdbc.sequence-connection-pool">true</prop>
                <prop key="eclipselink.jdbc.sequence-connection-pool.non-jta-data-source">jdbc/sequence_generator</prop>
                <prop key="eclipselink.jdbc.cache-statements">true</prop>
                <prop key="eclipselink.jdbc.batch-writing">JDBC</prop>
                <prop key="eclipselink.jdbc.batch-writing.size">500</prop>
                <prop key="eclipselink.logging.level">off</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                -->
            </props>
        </property>
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
